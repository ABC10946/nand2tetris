// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // inc
    /*
    Register(in[0]=false, load=false, out=regout);
    Inc16(in=regout, out=incw);
    Register(in=incw, load=inc, out=incout);

    // load
    Register(in=in, load=load, out=loadout);

    // reset
    Register(in[0]=false, load=reset, out=resetout);
    Mux8Way16(a=false, b=resetout, c=loadout, d=false, e=incout, f=false, g=false, h=false, sel[0]=reset, sel[1]=load, sel[2]=inc, out=out);
    */

    /*
    Inc16(in=loop1, out=incout);
    Mux16(a=incout, b=in, sel=load, out=mout);
    Mux16(a=mout, b[0]=false, sel=reset, out=mout2);
    Or(a=inc, b=load, out=orout);
    // think about reset...
    Register(in=mout2, load=orout, out=loop1, out=out);
    */

    Inc16(in=loopout, out=incval);
    Mux8Way16(a=loopout, b=in, c=incval, d=in, e[0]=false, f[0]=false, g[0]=false, sel[0]=load, sel[1]=inc, sel[2]=reset, out=val);

    // load is true
    // Register(in=in, load=load, out=out);
    // // inc is true
    // Register(in=incval, load=inc, out=out);
    // // reset is true
    // Register(in[0]=false, load=reset, out=out);
    Register(in=val, load=true, out=out, out=loopout);
}
